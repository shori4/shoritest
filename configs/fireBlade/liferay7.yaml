apiVersion: v1
kind: Template
metadata:
  name: "liferay-7"
  annotations:
    openshift.io/display-name: Liferay 7
    iconClass: icon-codeigniter
    description: This will deploy a functional vanilla liferay 7 with a persisten storage and a database
      and exposed public as <deployment-name>.firelay.managed.services
objects:
#Deployment:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: ${DEPLOYMENT_NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${DEPLOYMENT_NAME}
        tier: portal
        project: ${DEPLOYMENT_NAME}
    template:
      metadata:
        #creationTimestamp: null
        labels:
          app: ${DEPLOYMENT_NAME}
          tier: portal
          project: ${DEPLOYMENT_NAME}
      spec:
        securityContext:
          runAsUser: 1001
          fsGroup: 0
        containers:
          - env:
              - name: LIFERAY_DB_HOST
                value: ${DEPLOYMENT_NAME}-mysql
              - name: LIFERAY_DB_NAME
                value: ${DEPLOYMENT_NAME}
              - name: LIFERAY_DB_USER
                value: ${DB_USER}
              - name: LIFERAY_DB_PASSWORD
                value: ${DB_PASSWORD}
              - name: LIFERAY_HOST
                value: '${DEPLOYMENT_NAME}.firelay.managed.services'
              - name: DATABASE_TYPE
                value: 'mysql'
            image: '${LIFERAY_IMAGE}'
            #imagePullPolicy: Always
            name: liferay
            ports:
              - containerPort: 8080
                name: web
                protocol: TCP
            resources:
              limits:
                cpu: '1'
                memory: 4000Mi
              requests:
                cpu: 500m
                memory: 1000Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                name: no-api-access-please
              - mountPath: /conf_tmp/
                name: ${DEPLOYMENT_NAME}-liferay
              - mountPath: /opt/liferay/logs
                name: deployment-logs
        volumes:
          - emptyDir: {}
            name: no-api-access-please
          - emptyDir: {}
            name: deployment-logs
          - configMap:
              defaultMode: 440
              name: ${DEPLOYMENT_NAME}-liferay
            name: ${DEPLOYMENT_NAME}-liferay
#Configmap
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: ${DEPLOYMENT_NAME}
      tier: portal
      project: ${DEPLOYMENT_NAME}
    name: ${DEPLOYMENT_NAME}-liferay
  data:
    ROOT.xml: |+
      <Context crossContext="true" path="">
        <Resource
        name="jdbc/liferay"
        auth="Container"
        type="javax.sql.DataSource"
        driverClassName="com.mysql.jdbc.Driver"
        url="jdbc:mysql://${DEPLOYMENT_NAME}-mysql/${LIFERAY_DB_NAME}?useUnicode=true&amp;useFastDateParsing=false"
        username="${LIFERAY_DB_USER}"
        password="${LIFERAY_DB_PASSWORD}"
        initialSize="10"
        maxTotal="100"
        maxIdle="10"
        minEvictableIdleTimeMillis="600000"
        timeBetweenEvictionRunsMillis="60000"
        jmxEnabled="true"
        validationQuery="SELECT 1"
        testWhileIdle="true"
        validationInterval="15000"
        />
      </Context>
    portal-ext.properties: |+
      web.server.protocol=https
      web.server.https.port=443
      company.security.auth.requires.https=true
      redirect.url.security.mode=ip
      redirect.url.domains.allowed=
      redirect.url.ips.allowed=
      setup.wizard.enabled=false
      users.reminder.queries.enabled=false
      users.reminder.queries.custom.question.enabled=false
      mail.session.mail.smtp.auth=false
      mail.session.mail.smtp.host=localhost
      mail.session.mail.smtp.port=25
      jdbc.default.jndi.name=jdbc/liferay
    server.xml: |+
      <?xml version='1.0' encoding='utf-8'?>
      <Server port="8005" shutdown="SHUTDOWN">
        <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
        <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
        <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
        <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
        <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />
        <GlobalNamingResources>
          <Resource name="UserDatabase" auth="Container"
            type="org.apache.catalina.UserDatabase"
            description="User database that can be updated and saved"
            factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
            pathname="conf/tomcat-users.xml" />
          </GlobalNamingResources>
          <Service name="Catalina">
            <Connector port="8080" protocol="HTTP/1.1"
             proxyPort="443" scheme="https" 
             secure="true" connectionTimeout="20000"
             redirectPort="8443" URIEncoding="UTF-8" />
             <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" URIEncoding="UTF-8" />
             <Engine name="Catalina" defaultHost="localhost">
              <Realm className="org.apache.catalina.realm.LockOutRealm">
                <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                 resourceName="UserDatabase"/>
               </Realm>
               <Host name="localhost"  appBase="webapps"
                unpackWARs="true" autoDeploy="true">
                <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
                 prefix="localhost_access_log" suffix=".txt"
                 pattern="%h %l %u %t &quot;%r&quot; %s %b" />
               </Host>
             </Engine>
           </Service>
         </Server>
    setenv.sh: |
      CATALINA_OPTS="$CATALINA_OPTS -Dfile.encoding=UTF8
      -Djava.net.preferIPv4Stack=true
      -Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false
      -Duser.timezone=GMT -Xmx1024m -XX:MaxPermSize=384m"
#Service
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${DEPLOYMENT_NAME}
      tier: portal
      project: ${DEPLOYMENT_NAME}
    name: ${DEPLOYMENT_NAME}
  spec:
    selector:
      app: ${DEPLOYMENT_NAME}
    ports:
      - name: web
        port: 80
        protocol: TCP
        targetPort: 8080
    sessionAffinity: None
    type: NodePort

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${DEPLOYMENT_NAME}
      tier: portal
      project: ${DEPLOYMENT_NAME}
    name: gogo-shell
  spec:
    selector:
      app: ${DEPLOYMENT_NAME}
    ports:
      - name: web
        port: 11311
        protocol: TCP
        targetPort: 11311
    sessionAffinity: None
    type: NodePort

#Route
- apiVersion: v1
  kind: Route
  metadata:
   labels:
     app: ${DEPLOYMENT_NAME}
     tier: portal
     project: ${DEPLOYMENT_NAME}
   name: ${DEPLOYMENT_NAME}
   namespace: ${DEPLOYMENT_NAME}
  spec:
    host: ${DEPLOYMENT_HOST}
    port:
      targetPort: web
    tls:
      termination: edge
    to:
      kind: Service
      name: ${DEPLOYMENT_NAME}
    wildcardPolicy: None

- apiVersion: v1
  kind: Route
  metadata:
   labels:
     app: ${DEPLOYMENT_NAME}
     tier: portal
     project: ${DEPLOYMENT_NAME}
   name: gogo-shell
   namespace: ${DEPLOYMENT_NAME}
  spec:
    host: gogo-shell.com
    port:
      targetPort: web
    tls:
      termination: edge
    to:
      kind: Service
      name: ${DEPLOYMENT_NAME}
    wildcardPolicy: None


parameters:
  - name: DEPLOYMENT_NAME
    description: Name of deployment
    required: true
    value: liferay
  - name: NFS_CLASS
    description: storage class for nfs
    required: true
    value: firelay-nfs
  - name: NFS_SIZE
    description: Amount of GB destinated for NFS Volume
    required: true
    value: "5"
  - name: LIFERAY_IMAGE
    description: Docker Image for liferay
    required: true
    value: eu.gcr.io/managed-services-ms2/liferay:7-DEMO-2
  - name: DB_HOST
    description: Database host for liferay
    required: true
    value: liferay-mysql
  - name: DB_PASSWORD
    description: Database password for liferay
    required: true
    value: liferay
  - name: DB_USER
    description: Database user for liferay
    required: true
    value: liferay
  - name: DEPLOYMENT_HOST
    description: Host for liferay instance
    required: true
    value: liferayportal.com
